/**
 * generated by Xtext 2.24.0
 */
package org.xtext.assignment.mathCompilerDsl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.assignment.mathCompilerDsl.MathCompilerDslFactory
 * @model kind="package"
 * @generated
 */
public interface MathCompilerDslPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "mathCompilerDsl";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/assignment/MathCompilerDsl";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "mathCompilerDsl";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MathCompilerDslPackage eINSTANCE = org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.MathLangImpl <em>Math Lang</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathLangImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getMathLang()
   * @generated
   */
  int MATH_LANG = 0;

  /**
   * The feature id for the '<em><b>Math List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_LANG__MATH_LIST = 0;

  /**
   * The number of structural features of the '<em>Math Lang</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_LANG_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.MathExpImpl <em>Math Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathExpImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getMathExp()
   * @generated
   */
  int MATH_EXP = 1;

  /**
   * The feature id for the '<em><b>Exp Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXP__EXP_NAME = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXP__EXP = 1;

  /**
   * The number of structural features of the '<em>Math Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXP_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.ExpressionImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 2;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.VariableBindingImpl <em>Variable Binding</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.VariableBindingImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getVariableBinding()
   * @generated
   */
  int VARIABLE_BINDING = 3;

  /**
   * The number of structural features of the '<em>Variable Binding</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_BINDING_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.VariableUseImpl <em>Variable Use</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.VariableUseImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getVariableUse()
   * @generated
   */
  int VARIABLE_USE = 4;

  /**
   * The number of structural features of the '<em>Variable Use</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_USE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.NumberImpl <em>Number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.NumberImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getNumber()
   * @generated
   */
  int NUMBER = 5;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.PlusImpl <em>Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.PlusImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getPlus()
   * @generated
   */
  int PLUS = 6;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.MinusImpl <em>Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.MinusImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getMinus()
   * @generated
   */
  int MINUS = 7;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.MultImpl <em>Mult</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.MultImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getMult()
   * @generated
   */
  int MULT = 8;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Mult</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.DivImpl <em>Div</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.DivImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getDiv()
   * @generated
   */
  int DIV = 9;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Div</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.LetImpl <em>Let</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.LetImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getLet()
   * @generated
   */
  int LET = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET__NAME = VARIABLE_BINDING_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Binding</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET__BINDING = VARIABLE_BINDING_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET__BODY = VARIABLE_BINDING_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Let</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_FEATURE_COUNT = VARIABLE_BINDING_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.assignment.mathCompilerDsl.impl.VarImpl <em>Var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.assignment.mathCompilerDsl.impl.VarImpl
   * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getVar()
   * @generated
   */
  int VAR = 11;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR__REF = VARIABLE_USE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_FEATURE_COUNT = VARIABLE_USE_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.MathLang <em>Math Lang</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Math Lang</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.MathLang
   * @generated
   */
  EClass getMathLang();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.assignment.mathCompilerDsl.MathLang#getMathList <em>Math List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Math List</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.MathLang#getMathList()
   * @see #getMathLang()
   * @generated
   */
  EReference getMathLang_MathList();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.MathExp <em>Math Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Math Exp</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.MathExp
   * @generated
   */
  EClass getMathExp();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.assignment.mathCompilerDsl.MathExp#getExpName <em>Exp Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Exp Name</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.MathExp#getExpName()
   * @see #getMathExp()
   * @generated
   */
  EAttribute getMathExp_ExpName();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.MathExp#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.MathExp#getExp()
   * @see #getMathExp()
   * @generated
   */
  EReference getMathExp_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.VariableBinding <em>Variable Binding</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Binding</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.VariableBinding
   * @generated
   */
  EClass getVariableBinding();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.VariableUse <em>Variable Use</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Use</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.VariableUse
   * @generated
   */
  EClass getVariableUse();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.Number <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Number
   * @generated
   */
  EClass getNumber();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.assignment.mathCompilerDsl.Number#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Number#getValue()
   * @see #getNumber()
   * @generated
   */
  EAttribute getNumber_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.Plus <em>Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Plus
   * @generated
   */
  EClass getPlus();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Plus#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Plus#getLeft()
   * @see #getPlus()
   * @generated
   */
  EReference getPlus_Left();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Plus#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Plus#getRight()
   * @see #getPlus()
   * @generated
   */
  EReference getPlus_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.Minus <em>Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Minus</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Minus
   * @generated
   */
  EClass getMinus();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Minus#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Minus#getLeft()
   * @see #getMinus()
   * @generated
   */
  EReference getMinus_Left();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Minus#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Minus#getRight()
   * @see #getMinus()
   * @generated
   */
  EReference getMinus_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.Mult <em>Mult</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mult</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Mult
   * @generated
   */
  EClass getMult();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Mult#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Mult#getLeft()
   * @see #getMult()
   * @generated
   */
  EReference getMult_Left();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Mult#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Mult#getRight()
   * @see #getMult()
   * @generated
   */
  EReference getMult_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.Div <em>Div</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Div</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Div
   * @generated
   */
  EClass getDiv();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Div#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Div#getLeft()
   * @see #getDiv()
   * @generated
   */
  EReference getDiv_Left();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Div#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Div#getRight()
   * @see #getDiv()
   * @generated
   */
  EReference getDiv_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.Let <em>Let</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Let</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Let
   * @generated
   */
  EClass getLet();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.assignment.mathCompilerDsl.Let#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Let#getName()
   * @see #getLet()
   * @generated
   */
  EAttribute getLet_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Let#getBinding <em>Binding</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Binding</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Let#getBinding()
   * @see #getLet()
   * @generated
   */
  EReference getLet_Binding();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.assignment.mathCompilerDsl.Let#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Let#getBody()
   * @see #getLet()
   * @generated
   */
  EReference getLet_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.assignment.mathCompilerDsl.Var <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Var
   * @generated
   */
  EClass getVar();

  /**
   * Returns the meta object for the reference '{@link org.xtext.assignment.mathCompilerDsl.Var#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see org.xtext.assignment.mathCompilerDsl.Var#getRef()
   * @see #getVar()
   * @generated
   */
  EReference getVar_Ref();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MathCompilerDslFactory getMathCompilerDslFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.MathLangImpl <em>Math Lang</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathLangImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getMathLang()
     * @generated
     */
    EClass MATH_LANG = eINSTANCE.getMathLang();

    /**
     * The meta object literal for the '<em><b>Math List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATH_LANG__MATH_LIST = eINSTANCE.getMathLang_MathList();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.MathExpImpl <em>Math Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathExpImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getMathExp()
     * @generated
     */
    EClass MATH_EXP = eINSTANCE.getMathExp();

    /**
     * The meta object literal for the '<em><b>Exp Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MATH_EXP__EXP_NAME = eINSTANCE.getMathExp_ExpName();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATH_EXP__EXP = eINSTANCE.getMathExp_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.ExpressionImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.VariableBindingImpl <em>Variable Binding</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.VariableBindingImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getVariableBinding()
     * @generated
     */
    EClass VARIABLE_BINDING = eINSTANCE.getVariableBinding();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.VariableUseImpl <em>Variable Use</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.VariableUseImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getVariableUse()
     * @generated
     */
    EClass VARIABLE_USE = eINSTANCE.getVariableUse();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.NumberImpl <em>Number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.NumberImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getNumber()
     * @generated
     */
    EClass NUMBER = eINSTANCE.getNumber();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER__VALUE = eINSTANCE.getNumber_Value();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.PlusImpl <em>Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.PlusImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getPlus()
     * @generated
     */
    EClass PLUS = eINSTANCE.getPlus();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS__LEFT = eINSTANCE.getPlus_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS__RIGHT = eINSTANCE.getPlus_Right();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.MinusImpl <em>Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.MinusImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getMinus()
     * @generated
     */
    EClass MINUS = eINSTANCE.getMinus();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MINUS__LEFT = eINSTANCE.getMinus_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MINUS__RIGHT = eINSTANCE.getMinus_Right();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.MultImpl <em>Mult</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.MultImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getMult()
     * @generated
     */
    EClass MULT = eINSTANCE.getMult();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT__LEFT = eINSTANCE.getMult_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT__RIGHT = eINSTANCE.getMult_Right();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.DivImpl <em>Div</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.DivImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getDiv()
     * @generated
     */
    EClass DIV = eINSTANCE.getDiv();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV__LEFT = eINSTANCE.getDiv_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV__RIGHT = eINSTANCE.getDiv_Right();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.LetImpl <em>Let</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.LetImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getLet()
     * @generated
     */
    EClass LET = eINSTANCE.getLet();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LET__NAME = eINSTANCE.getLet_Name();

    /**
     * The meta object literal for the '<em><b>Binding</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET__BINDING = eINSTANCE.getLet_Binding();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET__BODY = eINSTANCE.getLet_Body();

    /**
     * The meta object literal for the '{@link org.xtext.assignment.mathCompilerDsl.impl.VarImpl <em>Var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.assignment.mathCompilerDsl.impl.VarImpl
     * @see org.xtext.assignment.mathCompilerDsl.impl.MathCompilerDslPackageImpl#getVar()
     * @generated
     */
    EClass VAR = eINSTANCE.getVar();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR__REF = eINSTANCE.getVar_Ref();

  }

} //MathCompilerDslPackage
